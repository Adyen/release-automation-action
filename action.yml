name: 'Release automation action'
description: 'Prepares the next release'
author: 'Michael Paul'
inputs:
  token:
    description: 'GITHUB_TOKEN or a `repo` scoped Personal Access Token (PAT)'
    default: ${{ github.token }}
  release-title:
    description: 'Release title prefix'
    required: true
  pre-release:
    description: 'This release will be labeled as non-production ready'
    default: false
  separator:
    description: 'Separator between main version and pre-release version'
    default: '-beta'
  develop-branch:
    description: 'Branch used for development and distribution'
    default: develop
  version-files:
    description: 'Files to bump with the new version'
    required: false
  github-release:
    description: "Publish Github release for the current version"
    required: false
  enable-auto-merge:
    description: 'Enable release pull request auto-merge'
    required: false
    default: '1'
outputs:
  increment:
    description: 'Type of the next release (e.g. major)'
  next-version:
    description: 'Suggestion of which version should go out next'
  changelog:
    description: 'List of merged pull requests unreleased'
runs:
  using: "composite"
  steps:
    - name: Clone consumer repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ inputs.token }}
        ref: ${{ inputs.develop-branch }}
    - name: Grab current version
      id: current-version
      run: echo "current-version=$(cat VERSION)" >> $GITHUB_OUTPUT
      shell: bash
    - name: Prepare release request
      id: release
      run: node '${{ github.action_path }}/dist/index.js'
      shell: bash
      env:
        INPUT_TOKEN: ${{ inputs.token }}
        INPUT_PRE-RELEASE: ${{ inputs.pre-release }}
        INPUT_SEPARATOR: ${{ inputs.separator }}
        INPUT_DEVELOP-BRANCH: ${{ inputs.develop-branch }}
        INPUT_CURRENT-VERSION: ${{ steps.current-version.outputs.current-version }}
    - name: Bump
      run: |
        perl -i -pe 's/${{steps.current-version.outputs.current-version}}/${{steps.release.outputs.next-version}}/' VERSION ${{ inputs.version-files }}
      shell: bash
    - name: Create Pull Request
      if: steps.release.outputs.next-version != steps.current-version.outputs.current-version
      id: cpr
      uses: peter-evans/create-pull-request@153407881ec5c347639a548ade7d8ad1d6740e38 # v5.0.2
      with:
        token: ${{ inputs.token }}
        base: ${{ inputs.develop-branch }}
        branch: promote/${{ inputs.develop-branch }}
        title: Release v${{steps.release.outputs.next-version}}
        body: |
          Merged pull requests to be released:

          ${{ steps.release.outputs.changelog || '- No changes from pull requests.' }}
          
          **Full Changelog**: https://github.com/${{ github.repository }}/compare/v${{ steps.current-version.outputs.current-version }}...${{ inputs.develop-branch }}
        commit-message: "chore(release): bump to ${{steps.release.outputs.next-version}}"
        delete-branch: true
        labels: release
    - name: Enable Pull Request Auto-merge
      if: inputs.enable-auto-merge == '1' && steps.cpr.outputs.pull-request-operation == 'created'
      run: gh pr merge --merge --auto "${{ steps.cpr.outputs.pull-request-number }}"
      shell: bash
      env:
        GH_TOKEN: ${{ inputs.token }}
    - name: Create a new Github release
      if: inputs.github-release || (github.event.pull_request.merged && contains(github.event.pull_request.labels.*.name, 'release'))
      id: gh-release
      uses: actions/github-script@v6
      with:
        github-token: ${{ inputs.token }}
        result-encoding: string
        script: |
          const currentVersion = "${{ steps.current-version.outputs.current-version }}";
          const stableVersion = /^\d+\.\d+\.\d+$/;
          const preRelease = !stableVersion.test(currentVersion);

          github.rest.repos.createRelease({
            owner: context.repo.owner,
            repo: context.repo.repo,
            tag_name: `v${currentVersion}`,
            target_commitish: "${{ inputs.develop-branch }}",
            name: `${{ inputs.release-title }} v${currentVersion}`,
            generate_release_notes: true,
            prerelease: preRelease
          });
          return 'Created';
    - name: Run summary
      shell: bash
      run: |
        echo "- Current version: ${{steps.current-version.outputs.current-version}}" >> $GITHUB_STEP_SUMMARY
        echo "- Next version: ${{steps.release.outputs.next-version}}" >> $GITHUB_STEP_SUMMARY
        echo "- Release pull request: ${{ steps.cpr.outputs.pull-request-number }}" >> $GITHUB_STEP_SUMMARY
        echo "- Github release: ${{ steps.gh-release.outputs.result }}" >> $GITHUB_STEP_SUMMARY